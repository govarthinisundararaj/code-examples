plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'eclipse'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}
group = 'io.reflectoring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
repositories {
	jcenter()
	mavenCentral()
}
jar {

}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation'org.junit.jupiter:junit-jupiter:5.4.0'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.4.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}
test {
  systemProperty 'de.adesso.junitinsights.enabled', 'true'
	systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
	filter {
	include 'io/reflectoring/mocking/**JUnitJupiterTest.class'
	}
    //exclude '**/mocking/**Test.java'
	useJUnitPlatform()
	ignoreFailures = true
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}
sonarqube {
    properties {
        property "sonar.projectName", "Spring :: Mocking :: SonarQube Scanner for Gradle"
       // property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property 'sonar.coverage.jacoco.xmlReportPaths', "D:/gitrepos/code-examples/spring-boot/mocking/build/reports/jacoco/test/jacocoTestReport.xml"
    }
    }